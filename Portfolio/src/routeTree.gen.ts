/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SobreRouteImport } from './routes/sobre'
import { Route as ServicosRouteImport } from './routes/servicos'
import { Route as ProjetosRouteImport } from './routes/projetos'
import { Route as ContatoRouteImport } from './routes/contato'
import { Route as IndexRouteImport } from './routes/index'

const SobreRoute = SobreRouteImport.update({
  id: '/sobre',
  path: '/sobre',
  getParentRoute: () => rootRouteImport,
} as any)
const ServicosRoute = ServicosRouteImport.update({
  id: '/servicos',
  path: '/servicos',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjetosRoute = ProjetosRouteImport.update({
  id: '/projetos',
  path: '/projetos',
  getParentRoute: () => rootRouteImport,
} as any)
const ContatoRoute = ContatoRouteImport.update({
  id: '/contato',
  path: '/contato',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/contato': typeof ContatoRoute
  '/projetos': typeof ProjetosRoute
  '/servicos': typeof ServicosRoute
  '/sobre': typeof SobreRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/contato': typeof ContatoRoute
  '/projetos': typeof ProjetosRoute
  '/servicos': typeof ServicosRoute
  '/sobre': typeof SobreRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/contato': typeof ContatoRoute
  '/projetos': typeof ProjetosRoute
  '/servicos': typeof ServicosRoute
  '/sobre': typeof SobreRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/contato' | '/projetos' | '/servicos' | '/sobre'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/contato' | '/projetos' | '/servicos' | '/sobre'
  id: '__root__' | '/' | '/contato' | '/projetos' | '/servicos' | '/sobre'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ContatoRoute: typeof ContatoRoute
  ProjetosRoute: typeof ProjetosRoute
  ServicosRoute: typeof ServicosRoute
  SobreRoute: typeof SobreRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sobre': {
      id: '/sobre'
      path: '/sobre'
      fullPath: '/sobre'
      preLoaderRoute: typeof SobreRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/servicos': {
      id: '/servicos'
      path: '/servicos'
      fullPath: '/servicos'
      preLoaderRoute: typeof ServicosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projetos': {
      id: '/projetos'
      path: '/projetos'
      fullPath: '/projetos'
      preLoaderRoute: typeof ProjetosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contato': {
      id: '/contato'
      path: '/contato'
      fullPath: '/contato'
      preLoaderRoute: typeof ContatoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ContatoRoute: ContatoRoute,
  ProjetosRoute: ProjetosRoute,
  ServicosRoute: ServicosRoute,
  SobreRoute: SobreRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import { motion } from "motion/react";
import { useState } from "react";
import {
  Eye,
  Search,
  Palette,
  Code,
  CheckCircle,
  Lightbulb,
  Zap,
} from "lucide-react";
import { Badge } from "./ui/badge";
import { ImageWithFallback } from "./figma/ImageWithFallback";
import { ProjectDetailModal } from "./ProjectDetailModal";
import { useTranslation } from "react-i18next";

const projectsData = [
  {
    id: "Naurial",
    title: "Naurial",
    image: "/images/Naurial.webp",
    thumbnail: "/images/Naurial.webp",
    banner: "/images/Naurial.webp",
    tags: [
      "React",
      "TypeScript",
      "Tailwind",
      "Next.js",
      "Figma",
      "Supabase",
      "AI",
    ],
    gridClass: "md:col-span-2 md:row-span-2",

    en: {
      subtitle: "Study Intelligently with Naurial",
      description:
        "Tired of studying alone? Have your AI as a personalized study companion being your teacher, study partner and career mentor.",
      challenge: {
        context:
          "Naurial is a gamified study assistant platform with personalized AI. Making users have an experience of evolving in their studies without feeling alone. And being able to share their assistants with other users.",
        problem:
          "Even with several existing AIs, personalization and adaptation to the user's learning style were limited. With this in mind, Naurial was created where users can have their own personalized study assistant and even share them with other users.",
        goals: [
          "Allow users to create and customize their own AI assistants",
          "Create simple and intuitive interfaces",
          "Reduce screen loading time by 70%",
          "Optimize for mobile and tablet devices",
          "Ensure WCAG 2.1 AA accessibility",
        ],
      },
      role: {
        position: "Front-End Lead Developer & UX Designer",
        responsibilities: [
          "Technical leadership of a team of 3 front-end developers",
          "React application architecture with TypeScript",
          "System design improvement",
          "Performance and accessibility optimization",
        ],
        process: [
          {
            phase: "Wireframes & Prototypes",
            description: "Iterative design in Figma with 3 feedback rounds",
            icon: Palette,
          },
          {
            phase: "Development",
            description: "React implementation with modular architecture",
            icon: Code,
          },
          {
            phase: "Testing & QA",
            description: "Manual testing on multiple devices",
            icon: CheckCircle,
          },
        ],
      },
      frontendSolution: {
        description:
          "I developed a highly performant React application using modern best practices. I implemented code-splitting, lazy loading and strategic memoization to ensure fast loading times even with large volumes of data.",
        liveDemo: "https://naurial.vercel.app/en",
        githubRepo: "https://github.com/Gabriel-Leall/naurial.git",
        technologies: [
          { name: "React 18", icon: "‚öõÔ∏è" },
          { name: "TypeScript", icon: "üìò" },
          { name: "Tailwind CSS", icon: "üé®" },
          { name: "Shadcn UI", icon: "üìä" },
          { name: "Framer Motion", icon: "üîÑ" },
        ],
        concepts: [
          "Advanced componentization",
          "Global state managed with Context API + Hooks",
          "Re-render optimization with React.memo and useMemo",
          "Route-based code-splitting with React.lazy",
          "CI/CD with GitHub Actions",
          "Scrum methodology",
        ],
        metrics: [
          { label: "Lighthouse Score", value: "98" },
          { label: "First Contentful Paint", value: "0.8s" },
          { label: "Time to Interactive", value: "1.2s" },
        ],
      },
      results: [
        {
          metric: "Performance",
          value: "+75%",
          description: "Loading time improvement",
        },
        {
          metric: "Productivity",
          value: "+60%",
          description: "Reduction in quiz generation time",
        },
      ],
    },

    pt: {
      subtitle: "Estude Inteligentemente com Naurial",
      description:
        "Cansado de estudar s√≥? Tenha sua IA como companheira de estudos personalizada sendo seu professor, colega de estudos e mentor de carreira.",
      challenge: {
        context:
          "A Naurial √© uma plataforma de assistente de estudos gamificada com IA personalizada. Fazendo com que o usu√°rio tenha uma experi√™ncia de estar evoluindo nos estudos sem se sentir sozinho. E podendo compartilhar seus assistentes com outros usu√°rios.",
        problem:
          "Mesmo contendo v√°rias IA existentes, a personaliza√ß√£o e adapta√ß√£o ao estilo de aprendizagem do usu√°rio eram limitadas. E pensando nisso a Naurial foi criada onde o usuario pode ter seu pr√≥prio assistente de estudos personalizado e ainda compartilhar eles com outros usu√°rios.",
        goals: [
          "Permitir que os usu√°rios criem e personalizem seus pr√≥prios assistentes de IA",
          "Criar interfaces simples e intuitivas",
          "Reduzir o tempo de carregamento das telas em 70%",
          "Otimizar para dispositivos m√≥veis e tablets",
          "Garantir acessibilidade WCAG 2.1 AA",
        ],
      },
      role: {
        position: "Desenvolvedor Front-End L√≠der & Designer UX",
        responsibilities: [
          "Lideran√ßa t√©cnica da equipe de 3 desenvolvedores front-end",
          "Arquitetura da aplica√ß√£o React com TypeScript",
          "Melhoria no Design do sistema",
          "Otimiza√ß√£o de performance e acessibilidade",
        ],
        process: [
          {
            phase: "Wireframes & Prot√≥tipos",
            description: "Design iterativo no Figma com 3 rodadas de feedback",
            icon: Palette,
          },
          {
            phase: "Desenvolvimento",
            description: "Implementa√ß√£o em React com arquitetura modular",
            icon: Code,
          },
          {
            phase: "Testes & QA",
            description: "Testes manuais em m√∫ltiplos dispositivos",
            icon: CheckCircle,
          },
        ],
      },
      frontendSolution: {
        description:
          "Desenvolvi uma aplica√ß√£o React altamente perform√°tica utilizando as melhores pr√°ticas modernas. Implementei code-splitting, lazy loading e memoization estrat√©gica para garantir tempos de carregamento r√°pidos mesmo com grandes volumes de dados.",
        liveDemo: "https://naurial.vercel.app/pt",
        githubRepo: "https://github.com/Gabriel-Leall/naurial.git",
        technologies: [
          { name: "React 18", icon: "‚öõÔ∏è" },
          { name: "TypeScript", icon: "üìò" },
          { name: "Tailwind CSS", icon: "üé®" },
          { name: "Shadcn UI", icon: "üìä" },
          { name: "Framer Motion", icon: "üîÑ" },
        ],
        concepts: [
          "Componentiza√ß√£o avan√ßada",
          "Estado global gerenciado com Context API + Hooks",
          "Otimiza√ß√£o de re-renders com React.memo e useMemo",
          "Code-splitting por rota com React.lazy",
          "CI/CD com GitHub Actions",
          "Metodologia Scrum",
        ],
        metrics: [
          { label: "Lighthouse Score", value: "98" },
          { label: "First Contentful Paint", value: "0.8s" },
          { label: "Time to Interactive", value: "1.2s" },
        ],
      },
      results: [
        {
          metric: "Performance",
          value: "+75%",
          description: "Melhoria no tempo de carregamento",
        },
        {
          metric: "Produtividade",
          value: "+60%",
          description: "Redu√ß√£o no tempo de gera√ß√£o de quizzes",
        },
      ],
    },
  },
  {
    id: "mobile-banking",
    title: "Mobile Banking App",
    subtitle: "Experi√™ncia Banc√°ria Segura e Intuitiva",
    description:
      "Secure and intuitive mobile banking experience with biometric authentication",
    image: "/images/barberschedule_thumb_large.webp",
    thumbnail: "/images/barberschedule_thumb_large.webp",
    tags: ["React Native", "Node.js", "MongoDB"],
    device: "mobile",
    gridClass: "md:col-span-1",

    challenge: {
      context:
        "Um banco digital startup precisava de um aplicativo m√≥vel que competisse com institui√ß√µes estabelecidas, oferecendo uma experi√™ncia superior enquanto mantinha os mais altos padr√µes de seguran√ßa.",
      problem:
        "Aplicativos banc√°rios tradicionais s√£o conhecidos por interfaces complexas e processos confusos. Era necess√°rio simplificar opera√ß√µes banc√°rias mantendo conformidade regulat√≥ria.",
      goals: [
        "Criar onboarding em menos de 3 minutos",
        "Implementar autentica√ß√£o biom√©trica segura",
        "Simplificar transfer√™ncias e pagamentos",
        "Garantir seguran√ßa de n√≠vel banc√°rio",
        "Suportar iOS e Android com base de c√≥digo √∫nica",
      ],
    },

    role: {
      position: "Mobile Developer & UX Designer",
      responsibilities: [
        "Design completo da experi√™ncia do usu√°rio",
        "Desenvolvimento do aplicativo React Native",
        "Implementa√ß√£o de features de seguran√ßa",
        "Integra√ß√£o com APIs banc√°rias",
        "Testes de usabilidade e itera√ß√£o",
      ],
      process: [
        {
          phase: "Pesquisa Competitiva",
          description: "An√°lise de 10 apps banc√°rios l√≠deres de mercado",
          icon: Search,
        },
        {
          phase: "Design de Interface",
          description: "Prot√≥tipos de alta fidelidade e testes com usu√°rios",
          icon: Palette,
        },
        {
          phase: "Desenvolvimento Mobile",
          description: "React Native com arquitetura escal√°vel",
          icon: Code,
        },
        {
          phase: "Seguran√ßa & Testes",
          description: "Penetration testing e auditoria de seguran√ßa",
          icon: CheckCircle,
        },
      ],
    },

    uxSolution: {
      description:
        "Desenvolvi uma interface minimalista que prioriza as a√ß√µes mais comuns dos usu√°rios. Utilizei micro-intera√ß√µes e feedback visual para criar confian√ßa durante transa√ß√µes financeiras.",
      images: [
        "https://images.unsplash.com/photo-1563986768609-322da13575f3?w=800&q=80",
        "https://images.unsplash.com/photo-1512941937669-90a1b58e7e9c?w=800&q=80",
      ],
      keyFeatures: [
        "Onboarding guiado com verifica√ß√£o de identidade",
        "Dashboard com resumo financeiro personalizado",
        "Transfer√™ncias via QR code e contatos",
        "Gest√£o de cart√µes virtuais instant√¢neos",
        "Notifica√ß√µes inteligentes de gastos",
        "Modo offline para consultas",
      ],
    },

    frontendSolution: {
      description:
        "Constru√≠ o aplicativo com React Native, garantindo performance nativa em ambas as plataformas. Implementei criptografia end-to-end e seguindo as melhores pr√°ticas de seguran√ßa mobile.",
      liveDemo: "https://apps.apple.com/app/banking-demo",
      githubRepo: "https://github.com/username/mobile-banking",
      technologies: [
        { name: "React Native", icon: "üì±" },
        { name: "TypeScript", icon: "üìò" },
        { name: "Node.js", icon: "üü¢" },
        { name: "MongoDB", icon: "üçÉ" },
        { name: "Redux", icon: "üîÆ" },
        { name: "Jest", icon: "üÉè" },
      ],
      concepts: [
        "Arquitetura Clean com separa√ß√£o de camadas",
        "State management com Redux Toolkit",
        "Navega√ß√£o otimizada com React Navigation",
        "Armazenamento seguro com Keychain/Keystore",
        "Autentica√ß√£o biom√©trica nativa",
        "Offline-first com sincroniza√ß√£o",
        "Anima√ß√µes fluidas com Reanimated",
        "Testes E2E com Detox",
      ],
      metrics: [
        { label: "App Store Rating", value: "4.9‚≠ê" },
        { label: "Performance Score", value: "95" },
        { label: "Crash-free Rate", value: "99.8%" },
      ],
    },

    results: [
      {
        metric: "Ado√ß√£o",
        value: "50K+",
        description: "Usu√°rios ativos em 3 meses",
      },
      {
        metric: "Tempo de Onboarding",
        value: "2.5min",
        description: "M√©dia de conclus√£o",
      },
      { metric: "NPS Score", value: "72", description: "Net Promoter Score" },
    ],
  },
  {
    id: "cms-platform",
    title: "Content Management System",
    subtitle: "CMS Moderno com Drag-and-Drop",
    description:
      "Powerful CMS with drag-and-drop interface and multi-language support",
    image: "/images/image.webp",
    thumbnail: "/images/image.webp",
    tags: ["Vue.js", "Firebase", "Sass"],
    device: "tablet",
    gridClass: "md:col-span-1",

    challenge: {
      context:
        "Uma ag√™ncia de marketing digital gerenciava mais de 50 websites de clientes e precisava de uma solu√ß√£o unificada que permitisse edi√ß√£o de conte√∫do sem conhecimento t√©cnico.",
      problem:
        "CMSs tradicionais como WordPress eram lentos e dif√≠ceis de customizar. A equipe precisava de flexibilidade total sem comprometer a facilidade de uso.",
      goals: [
        "Interface visual drag-and-drop intuitiva",
        "Suporte para m√∫ltiplos idiomas e localiza√ß√£o",
        "Sistema de componentes reutiliz√°veis",
        "Colabora√ß√£o em tempo real",
        "Publica√ß√£o instant√¢nea com preview",
      ],
    },

    role: {
      position: "Full-Stack Developer & Product Designer",
      responsibilities: [
        "Design da arquitetura do sistema",
        "Desenvolvimento front-end em Vue.js",
        "Implementa√ß√£o do editor drag-and-drop",
        "Integra√ß√£o com Firebase e cloud storage",
        "Design do sistema de componentes",
      ],
      process: [
        {
          phase: "Discovery & Research",
          description: "Workshops com editores e an√°lise de pain points",
          icon: Search,
        },
        {
          phase: "Prototipagem",
          description: "Itera√ß√£o r√°pida com prot√≥tipos interativos",
          icon: Lightbulb,
        },
        {
          phase: "Desenvolvimento Core",
          description: "Vue.js 3 com Composition API",
          icon: Code,
        },
        {
          phase: "Beta Testing",
          description: "Testes com 10 clientes beta durante 2 meses",
          icon: CheckCircle,
        },
      ],
    },

    uxSolution: {
      description:
        "Criei um editor visual que abstrai completamente a complexidade t√©cnica. Usu√°rios podem arrastar componentes, editar conte√∫do inline e ver mudan√ßas em tempo real, similar ao Figma mas para websites.",
      images: [
        "https://images.unsplash.com/photo-1547658719-da2b51169166?w=800&q=80",
        "https://images.unsplash.com/photo-1432888622747-4eb9a8f2c293?w=800&q=80",
      ],
      keyFeatures: [
        "Editor visual drag-and-drop de componentes",
        "Biblioteca de templates prontos",
        "Edi√ß√£o de conte√∫do inline",
        "Preview em m√∫ltiplos dispositivos",
        "Gest√£o de m√≠dia com crop e filtros",
        "Controle de vers√µes e rollback",
      ],
    },

    frontendSolution: {
      description:
        "Desenvolvi a aplica√ß√£o com Vue.js 3 e Composition API, aproveitando reatividade profunda para sincroniza√ß√£o em tempo real. Firebase Firestore garante persist√™ncia instant√¢nea e colabora√ß√£o.",
      liveDemo: "https://cms-demo.example.com",
      githubRepo: "https://github.com/username/vue-cms",
      technologies: [
        { name: "Vue.js 3", icon: "üíö" },
        { name: "TypeScript", icon: "üìò" },
        { name: "Firebase", icon: "üî•" },
        { name: "Sass", icon: "üé®" },
        { name: "Vite", icon: "‚ö°" },
        { name: "Pinia", icon: "üçç" },
      ],
      concepts: [
        "Composition API para l√≥gica reutiliz√°vel",
        "State management com Pinia",
        "Drag-and-drop com Vue Draggable",
        "Real-time sync com Firestore",
        "Autentica√ß√£o com Firebase Auth",
        "Storage otimizado com CDN",
        "Build otimizado com Vite",
        "Testes de componentes com Vitest",
      ],
      metrics: [
        { label: "Build Time", value: "3.2s" },
        { label: "Bundle Size", value: "180KB" },
        { label: "Lighthouse Score", value: "96" },
      ],
    },

    results: [
      {
        metric: "Efici√™ncia",
        value: "+80%",
        description: "Redu√ß√£o no tempo de edi√ß√£o",
      },
      {
        metric: "Websites",
        value: "150+",
        description: "Gerenciados na plataforma",
      },
      {
        metric: "Uptime",
        value: "99.9%",
        description: "Disponibilidade do sistema",
      },
    ],
  },
];

export function FeaturedProjects() {
  const { t, i18n } = useTranslation();
  const [selectedProject, setSelectedProject] = useState<
    (typeof projectsData)[0] | null
  >(null);
  const [isModalOpen, setIsModalOpen] = useState(false);

  const handleProjectClick = (project: (typeof projectsData)[0]) => {
    setSelectedProject(project);
    setIsModalOpen(true);
  };

  const handleCloseModal = () => {
    setIsModalOpen(false);
    setTimeout(() => setSelectedProject(null), 300);
  };

  // Get current language data for display
  const getCurrentLangData = (project: (typeof projectsData)[0]) => {
    const currentLang = i18n.language as "en" | "pt";
    return project[currentLang];
  };

  return (
    <>
      <section id="projects" className="py-24 relative">
        <div className="max-w-7xl mx-auto px-6">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            transition={{ duration: 0.6 }}
            className="text-center mb-16"
          >
            <h2 className="text-4xl md:text-5xl mb-4 text-white">
              {t("projects.title")}
            </h2>
            <p className="text-xl text-gray-400">{t("projects.subtitle")}</p>
          </motion.div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            {projectsData.map((project, index) => (
              <motion.div
                key={project.id}
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: index * 0.1, duration: 0.5 }}
                className={`${project.gridClass} group relative cursor-pointer`}
                onClick={() => handleProjectClick(project)}
              >
                <div className="relative h-full min-h-[400px] rounded-2xl overflow-hidden backdrop-blur-md bg-linear-to-br from-secondary/50 to-background/50 border border-white/5 p-6 hover:border-accent/30 transition-all duration-500 hover:shadow-[0_0_40px_var(--accent)]">
                  {/* Image Container */}
                  <div className="relative h-48 mb-6 rounded-lg overflow-hidden">
                    <motion.div
                      whileHover={{ scale: 1.05 }}
                      transition={{ duration: 0.4 }}
                      className="h-full"
                    >
                      <ImageWithFallback
                        src={project.image}
                        alt={project.title}
                        className="w-full h-full object-cover"
                      />

                      {/* Overlay on hover */}
                      <div className="absolute inset-0 bg-linear-to-t from-accent/80 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center gap-4">
                        <motion.div
                          whileHover={{ scale: 1.1 }}
                          whileTap={{ scale: 0.95 }}
                          className="w-16 h-16 rounded-full bg-white flex items-center justify-center"
                        >
                          <Eye size={28} className="text-black" />
                        </motion.div>
                      </div>
                    </motion.div>
                  </div>

                  {/* Content */}
                  <div className="space-y-4">
                    <h3 className="text-2xl text-white group-hover:text-accent transition-colors duration-300">
                      {project.title}
                    </h3>
                    <p className="text-gray-400">
                      {getCurrentLangData(project)?.description}
                    </p>

                    {/* Tech Stack Tags */}
                    <div className="flex flex-wrap gap-2">
                      {project.tags.map((tag) => (
                        <Badge
                          key={tag}
                          variant="outline"
                          className="border-accent/30 text-accent bg-accent/5 hover:bg-accent/10"
                        >
                          {tag}
                        </Badge>
                      ))}
                    </div>

                    {/* View Case Study Button */}
                    <div className="pt-2">
                      <div className="inline-flex items-center gap-2 text-accent group-hover:gap-3 transition-all">
                        <span className="text-sm">
                          {t("projects.viewCaseStudy")}
                        </span>
                        <Eye size={16} />
                      </div>
                    </div>
                  </div>

                  {/* Device indicator */}
                  <div className="absolute top-4 right-4 px-3 py-1 rounded-full bg-accent/10 border border-accent/30 text-accent text-xs uppercase tracking-wider">
                    {project.device}
                  </div>
                </div>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* Project Detail Modal */}
      <ProjectDetailModal
        project={selectedProject}
        isOpen={isModalOpen}
        onClose={handleCloseModal}
      />
    </>
  );
}
